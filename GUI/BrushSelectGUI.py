#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Feb 24, 2022 10:40:44 AM +0200  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

# import ColourAddGUI_support


class Toplevel1:
    def __init__(self, top=None, outline_colour='#000000', fill_colour='#ffffff', width=5):
        super(Toplevel1, self).__init__()
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("494x196+699+314")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Select Brush")
        top.configure(background="#d9d9d9")

        self.top = top
        self.LineC = outline_colour
        self.FillC = fill_colour
        self.LineC_RGB = self.hex_to_rgb(outline_colour[1:])
        self.FillC_RGB = self.hex_to_rgb(fill_colour[1:])
        self.Width = width
        self.WidthVar = tk.IntVar(value=self.Width)
        self.Changed = 0

        self.LineR = tk.IntVar(value=self.LineC_RGB[0])
        self.LineG = tk.IntVar(value=self.LineC_RGB[1])
        self.LineB = tk.IntVar(value=self.LineC_RGB[2])

        self.FillR = tk.IntVar(value=self.FillC_RGB[0])
        self.FillG = tk.IntVar(value=self.FillC_RGB[1])
        self.FillB = tk.IntVar(value=self.FillC_RGB[2])

        self.ColourPreviewFrame = tk.Frame(self.top)
        self.ColourPreviewFrame.place(relx=0.0, rely=0.0, relheight=0.383
                , relwidth=0.496)
        self.ColourPreviewFrame.configure(relief='groove')
        self.ColourPreviewFrame.configure(borderwidth="2")
        self.ColourPreviewFrame.configure(relief="groove")
        self.ColourPreviewFrame.configure(background="#d9d9d9")

        self.LinePreviewLabel = tk.Label(self.ColourPreviewFrame)
        self.LinePreviewLabel.place(relx=0.041, rely=0.133, height=51, width=34)
        self.LinePreviewLabel.configure(anchor='w')
        self.LinePreviewLabel.configure(background="#d9d9d9")
        self.LinePreviewLabel.configure(compound='left')
        self.LinePreviewLabel.configure(disabledforeground="#a3a3a3")
        self.LinePreviewLabel.configure(font="-family {David} -size 24")
        self.LinePreviewLabel.configure(foreground="#000000")
        self.LinePreviewLabel.configure(text='''L:''')

        self.LineColourPreview = tk.Canvas(self.ColourPreviewFrame)
        self.LineColourPreview.place(relx=0.204, rely=0.133, relheight=0.707
                , relwidth=0.216)
        self.LineColourPreview.configure(background="#d9d9d9")
        self.LineColourPreview.configure(borderwidth="2")
        self.LineColourPreview.configure(insertbackground="black")
        self.LineColourPreview.configure(relief="ridge")
        self.LineColourPreview.configure(selectbackground="blue")
        self.LineColourPreview.configure(selectforeground="white")

        self.FillPreviewLabel = tk.Label(self.ColourPreviewFrame)
        self.FillPreviewLabel.place(relx=0.49, rely=0.133, height=51, width=34)
        self.FillPreviewLabel.configure(activebackground="#f9f9f9")
        self.FillPreviewLabel.configure(activeforeground="black")
        self.FillPreviewLabel.configure(anchor='w')
        self.FillPreviewLabel.configure(background="#d9d9d9")
        self.FillPreviewLabel.configure(compound='left')
        self.FillPreviewLabel.configure(disabledforeground="#a3a3a3")
        self.FillPreviewLabel.configure(font="-family {David} -size 24")
        self.FillPreviewLabel.configure(foreground="#000000")
        self.FillPreviewLabel.configure(highlightbackground="#d9d9d9")
        self.FillPreviewLabel.configure(highlightcolor="black")
        self.FillPreviewLabel.configure(text='''F:''')

        self.FillColourPreview = tk.Canvas(self.ColourPreviewFrame)
        self.FillColourPreview.place(relx=0.653, rely=0.133, relheight=0.707
                , relwidth=0.216)
        self.FillColourPreview.configure(background="#d9d9d9")
        self.FillColourPreview.configure(borderwidth="2")
        self.FillColourPreview.configure(highlightbackground="#d9d9d9")
        self.FillColourPreview.configure(highlightcolor="black")
        self.FillColourPreview.configure(insertbackground="black")
        self.FillColourPreview.configure(relief="ridge")
        self.FillColourPreview.configure(selectbackground="blue")
        self.FillColourPreview.configure(selectforeground="white")

        self.LineWidthSelectionFrame = tk.Frame(self.top)
        self.LineWidthSelectionFrame.place(relx=0.486, rely=0.0, relheight=0.383
                , relwidth=0.516)
        self.LineWidthSelectionFrame.configure(relief='groove')
        self.LineWidthSelectionFrame.configure(borderwidth="2")
        self.LineWidthSelectionFrame.configure(relief="groove")
        self.LineWidthSelectionFrame.configure(background="#d9d9d9")

        self.LineWidthLabel = tk.Label(self.LineWidthSelectionFrame)
        self.LineWidthLabel.place(relx=0.078, rely=0.133, height=51, width=164)
        self.LineWidthLabel.configure(anchor='w')
        self.LineWidthLabel.configure(background="#d9d9d9")
        self.LineWidthLabel.configure(compound='left')
        self.LineWidthLabel.configure(disabledforeground="#a3a3a3")
        self.LineWidthLabel.configure(font="-family {David} -size 24")
        self.LineWidthLabel.configure(foreground="#000000")
        self.LineWidthLabel.configure(text='''Line Width:''')

        self.LineWidthEntry = tk.Entry(self.LineWidthSelectionFrame)
        self.LineWidthEntry.place(relx=0.784, rely=0.133, height=50
                , relwidth=0.173)
        self.LineWidthEntry.configure(background="white")
        self.LineWidthEntry.configure(disabledforeground="#a3a3a3")
        self.LineWidthEntry.configure(font="TkFixedFont")
        self.LineWidthEntry.configure(foreground="#000000")
        self.LineWidthEntry.configure(insertbackground="black")
        self.LineWidthEntry.configure(textvariable=self.WidthVar)

        self.LineColourSelectionLabel = tk.Label(self.top)
        self.LineColourSelectionLabel.place(relx=0.02, rely=0.459, height=61
                , width=224)
        self.LineColourSelectionLabel.configure(anchor='w')
        self.LineColourSelectionLabel.configure(background="#d9d9d9")
        self.LineColourSelectionLabel.configure(compound='left')
        self.LineColourSelectionLabel.configure(disabledforeground="#a3a3a3")
        self.LineColourSelectionLabel.configure(font="-family {David} -size 24")
        self.LineColourSelectionLabel.configure(foreground="#000000")
        self.LineColourSelectionLabel.configure(text='''L: (     ,      ,      )''')

        self.LineRValueEntry = tk.Entry(self.top)
        self.LineRValueEntry.place(relx=0.121, rely=0.51, height=40
                , relwidth=0.069)
        self.LineRValueEntry.configure(background="white")
        self.LineRValueEntry.configure(disabledforeground="#a3a3a3")
        self.LineRValueEntry.configure(font="TkFixedFont")
        self.LineRValueEntry.configure(foreground="#000000")
        self.LineRValueEntry.configure(insertbackground="black")
        self.LineRValueEntry.configure(textvariable=self.LineR)

        self.LineGValueEntry = tk.Entry(self.top)
        self.LineGValueEntry.place(relx=0.223, rely=0.51, height=40
                , relwidth=0.069)
        self.LineGValueEntry.configure(background="white")
        self.LineGValueEntry.configure(disabledforeground="#a3a3a3")
        self.LineGValueEntry.configure(font="TkFixedFont")
        self.LineGValueEntry.configure(foreground="#000000")
        self.LineGValueEntry.configure(insertbackground="black")
        self.LineGValueEntry.configure(textvariable=self.LineG)

        self.LineBValueEntry = tk.Entry(self.top)
        self.LineBValueEntry.place(relx=0.324, rely=0.51, height=40
                , relwidth=0.069)
        self.LineBValueEntry.configure(background="white")
        self.LineBValueEntry.configure(disabledforeground="#a3a3a3")
        self.LineBValueEntry.configure(font="TkFixedFont")
        self.LineBValueEntry.configure(foreground="#000000")
        self.LineBValueEntry.configure(insertbackground="black")
        self.LineBValueEntry.configure(textvariable=self.LineB)

        self.FillColourSelectionLabel = tk.Label(self.top)
        self.FillColourSelectionLabel.place(relx=0.506, rely=0.459, height=61
                , width=224)
        self.FillColourSelectionLabel.configure(anchor='w')
        self.FillColourSelectionLabel.configure(background="#d9d9d9")
        self.FillColourSelectionLabel.configure(compound='left')
        self.FillColourSelectionLabel.configure(disabledforeground="#a3a3a3")
        self.FillColourSelectionLabel.configure(font="-family {David} -size 24")
        self.FillColourSelectionLabel.configure(foreground="#000000")
        self.FillColourSelectionLabel.configure(text='''F: (     ,     ,      )''')

        self.FillRValueEntry = tk.Entry(self.top)
        self.FillRValueEntry.place(relx=0.607, rely=0.51, height=40
                , relwidth=0.069)
        self.FillRValueEntry.configure(background="white")
        self.FillRValueEntry.configure(disabledforeground="#a3a3a3")
        self.FillRValueEntry.configure(font="TkFixedFont")
        self.FillRValueEntry.configure(foreground="#000000")
        self.FillRValueEntry.configure(insertbackground="black")
        self.FillRValueEntry.configure(textvariable=self.FillR)

        self.FillGValueEntry = tk.Entry(self.top)
        self.FillGValueEntry.place(relx=0.688, rely=0.51, height=40
                , relwidth=0.069)
        self.FillGValueEntry.configure(background="white")
        self.FillGValueEntry.configure(disabledforeground="#a3a3a3")
        self.FillGValueEntry.configure(font="TkFixedFont")
        self.FillGValueEntry.configure(foreground="#000000")
        self.FillGValueEntry.configure(insertbackground="black")
        self.FillGValueEntry.configure(textvariable=self.FillG)

        self.FillBValueEntry = tk.Entry(self.top)
        self.FillBValueEntry.place(relx=0.789, rely=0.51, height=40
                , relwidth=0.069)
        self.FillBValueEntry.configure(background="white")
        self.FillBValueEntry.configure(disabledforeground="#a3a3a3")
        self.FillBValueEntry.configure(font="TkFixedFont")
        self.FillBValueEntry.configure(foreground="#000000")
        self.FillBValueEntry.configure(insertbackground="black")
        self.FillBValueEntry.configure(textvariable=self.FillB)

        self.ApplyButton = tk.Button(self.top)
        self.ApplyButton.place(relx=0.395, rely=0.8, height=40, width=100)
        self.ApplyButton.configure(activebackground="#ececec")
        self.ApplyButton.configure(activeforeground="#000000")
        self.ApplyButton.configure(background="#d9d9d9")
        self.ApplyButton.configure(compound='left')
        self.ApplyButton.configure(disabledforeground="#a3a3a3")
        self.ApplyButton.configure(font="-family {David} -size 18")
        self.ApplyButton.configure(foreground="#000000")
        self.ApplyButton.configure(highlightbackground="#d9d9d9")
        self.ApplyButton.configure(highlightcolor="black")
        self.ApplyButton.configure(pady="0")
        self.ApplyButton.configure(text='''Apply''')
        self.ApplyButton.configure(command=lambda: self.apply_colour())

        self.apply_colour()

    def hex_to_rgb(self, hex) -> tuple[int, ...]:
        rgb = []
        for i in (0, 2, 4):
            decimal = int(hex[i:i + 2], 16)
            rgb.append(decimal)
        return tuple(rgb)

    def rgb_to_hex(self, rgb: tuple[int, int, int]) -> str:
        print(str(rgb))
        print('#'+'%02x%02x%02x' % rgb)
        return '#' + '%02x%02x%02x' % rgb

    def apply_colour(self):
        # Change Our parameters according to entered parameters, and update previews
        new_line = (self.LineR.get(), self.LineG.get(), self.LineB.get())
        self.LineC = self.rgb_to_hex(new_line)
        new_fill = (self.FillR.get(), self.FillG.get(), self.FillB.get())
        self.FillC = self.rgb_to_hex(new_fill)
        self.Width = self.WidthVar.get()

        self.LineColourPreview.configure(background=self.LineC)
        self.FillColourPreview.configure(background=self.FillC)
        self.Changed = 1


#def start_up():
#    ColourAddGUI_support.main()

if __name__ == '__main__':
    root = tk.Tk()
    t = Toplevel1(root)
    root.mainloop()





